package com.ims.security.dal.bean;
// default package
// Generated Jul 21, 2012 4:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.ims.core.dal.bean.InstituteBranch;

/**
 * InstituteBranchModule generated by hbm2java
 */
@Entity
@Table(name = "Institute_Branch_Module", catalog = "ims2")
public class InstituteBranchModule implements java.io.Serializable {

	private Integer id;
	private Module module;
	private InstituteBranch instituteBranch;
	private Set roleInstituteBranchModules = new HashSet(0);

	public InstituteBranchModule() {
	}

	public InstituteBranchModule(Module module, InstituteBranch instituteBranch) {
		this.module = module;
		this.instituteBranch = instituteBranch;
	}

	public InstituteBranchModule(Module module,
			InstituteBranch instituteBranch, Set roleInstituteBranchModules) {
		this.module = module;
		this.instituteBranch = instituteBranch;
		this.roleInstituteBranchModules = roleInstituteBranchModules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Module_id", nullable = false)
	public Module getModule() {
		return this.module;
	}

	public void setModule(Module module) {
		this.module = module;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Institute_Branch_id", nullable = false)
	public InstituteBranch getInstituteBranch() {
		return this.instituteBranch;
	}

	public void setInstituteBranch(InstituteBranch instituteBranch) {
		this.instituteBranch = instituteBranch;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "instituteBranchModule")
	public Set getRoleInstituteBranchModules() {
		return this.roleInstituteBranchModules;
	}

	public void setRoleInstituteBranchModules(Set roleInstituteBranchModules) {
		this.roleInstituteBranchModules = roleInstituteBranchModules;
	}

}
